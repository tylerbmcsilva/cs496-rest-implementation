{
	"id": "36e76468-2271-4070-a991-ce544dbc4170",
	"name": "REST Implementation Test Suite",
	"allTests": [],
	"timestamp": "2018-04-28T22:11:06.979Z",
	"collection_id": "3d45ec6f-207d-4fd4-b70d-036ca829fd7a",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": [],
	"delay": 500,
	"count": 1,
	"collection": {
		"id": "3d45ec6f-207d-4fd4-b70d-036ca829fd7a",
		"name": "REST Implementation Test Suite",
		"description": "",
		"auth": null,
		"events": [
			{
				"listen": "prerequest",
				"script": {
					"id": "51d802f3-d809-4162-92ba-1c77bfbd51da",
					"type": "text/javascript",
					"exec": [
						""
					]
				}
			},
			{
				"listen": "test",
				"script": {
					"id": "4a5269a5-3d16-4a7f-b8f8-da4d80dc2438",
					"type": "text/javascript",
					"exec": [
						""
					]
				}
			}
		],
		"variables": [
			{
				"key": "base_url",
				"value": "localhost:8080",
				"description": "",
				"type": "text",
				"disabled": false
			},
			{
				"key": "prod",
				"value": "https://restimplementation-202104.appspot.com",
				"description": "",
				"type": "text",
				"disabled": false
			}
		],
		"order": [],
		"folders_order": [
			"045cfe73-c4dc-4b15-841d-21fa9af0a7ec",
			"42fa5331-6d91-46bc-9191-6597de57fc5f",
			"17a7075f-5c84-4f10-b638-70a66b69bdc5",
			"af472e2d-6927-4559-8c5f-cdde38c1cb1e"
		],
		"owner": "0",
		"permissions": {},
		"favorite": false,
		"shared": false,
		"type": "collection",
		"depth": 0
	},
	"folder": null,
	"environment": null,
	"globals": [
		{
			"key": "testBoat",
			"value": "{\"at_sea\":true,\"length\":100,\"name\":\"TestBoat\",\"type\":\"Skipper\",\"id\":\"5730827476402176\"}",
			"enabled": true,
			"type": "text"
		},
		{
			"key": "testSlip",
			"value": "{\"number\":123456,\"current_boat\":\"\",\"arrival_date\":\"\",\"departure_history\":[],\"id\":\"5717495361044480\"}",
			"enabled": true,
			"type": "text"
		},
		{
			"key": "testSlipId",
			"value": "5717495361044480",
			"enabled": true,
			"type": "text"
		},
		{
			"key": "testBoatId",
			"value": "5730827476402176",
			"enabled": true,
			"type": "text"
		},
		{
			"key": "testDockSlip",
			"value": "5717495361044480",
			"enabled": true,
			"type": "text"
		}
	],
	"results": [
		{
			"name": "GET /boat",
			"id": "ec7f0d2b-66e1-4756-8c73-1dc28f178bff",
			"url": "localhost:8080/boat",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Array in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Array in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"297"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Array in JSON body": true
				}
			],
			"time": "297",
			"totalRequestTime": "297",
			"iterationResults": {}
		},
		{
			"name": "POST /boat - Success",
			"id": "bf5ed0d8-0452-46fb-aee9-6d1babf21a59",
			"url": "localhost:8080/boat",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Response is 201",
				"status": "pass",
				"Should return JSON body": true,
				"Should return id of created boat": true
			},
			"testPassFailCounts": {
				"Response is 201": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return id of created boat": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"240"
			],
			"allTests": [
				{
					"Response is 201": true,
					"Should return JSON body": true,
					"Should return id of created boat": true
				}
			],
			"time": "240",
			"totalRequestTime": "240",
			"iterationResults": {}
		},
		{
			"name": "POST /boat - Error",
			"id": "45293e90-fe40-46e5-8d0c-722fa0a81069",
			"url": "localhost:8080/boat",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Response is 400",
				"status": "pass",
				"Should return JSON body": true,
				"Should return error in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 400": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return error in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"4"
			],
			"allTests": [
				{
					"Response is 400": true,
					"Should return JSON body": true,
					"Should return error in JSON body": true
				}
			],
			"time": "4",
			"totalRequestTime": "4",
			"iterationResults": {}
		},
		{
			"name": "GET /boat/{boatid}",
			"id": "19cd51db-6c9b-4191-913e-ea454cc52984",
			"url": "localhost:8080/boat/5764017373052928",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Boat in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"318"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Boat in JSON body": true
				}
			],
			"time": "318",
			"totalRequestTime": "318",
			"iterationResults": {}
		},
		{
			"name": "PATCH /boat/{boatid}",
			"id": "e8e7010e-b0ae-45e6-a6ca-4c6b7f57ffa8",
			"url": "localhost:8080/boat/5764017373052928",
			"totalTime": 0,
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"tests": {
				"name": "Response is 202",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Boat ID in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"176"
			],
			"allTests": [
				{
					"Response is 202": true,
					"Should return JSON body": true,
					"Should return Boat ID in JSON body": true
				}
			],
			"time": "176",
			"totalRequestTime": "176",
			"iterationResults": {}
		},
		{
			"name": "PATCH /boat/{boatid} - Verifying Change",
			"id": "6f12fd11-baa9-485d-89f0-c3d06a93d9f7",
			"url": "localhost:8080/boat/5764017373052928",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Boat in JSON body": true,
				"Should have updated values": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should have updated values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"88"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Boat in JSON body": true,
					"Should have updated values": true
				}
			],
			"time": "88",
			"totalRequestTime": "88",
			"iterationResults": {}
		},
		{
			"name": "GET /slip",
			"id": "e04880d4-cce1-4b00-801c-07976bdad117",
			"url": "localhost:8080/slip",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Array in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Array in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"83"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Array in JSON body": true
				}
			],
			"time": "83",
			"totalRequestTime": "83",
			"iterationResults": {}
		},
		{
			"name": "POST /slip - Success",
			"id": "f26a58c2-e99d-422e-900f-87e7bf62b148",
			"url": "localhost:8080/slip",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Response is 201",
				"status": "pass",
				"Should return JSON body": true,
				"Should return id of created boat": true
			},
			"testPassFailCounts": {
				"Response is 201": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return id of created boat": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"449"
			],
			"allTests": [
				{
					"Response is 201": true,
					"Should return JSON body": true,
					"Should return id of created boat": true
				}
			],
			"time": "449",
			"totalRequestTime": "449",
			"iterationResults": {}
		},
		{
			"name": "POST /slip - Error",
			"id": "0c70d557-9776-4a6d-9970-f3ea8b7b4560",
			"url": "localhost:8080/slip",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Response is 400",
				"status": "pass",
				"Should return JSON body": true,
				"Should return error in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 400": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return error in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3"
			],
			"allTests": [
				{
					"Response is 400": true,
					"Should return JSON body": true,
					"Should return error in JSON body": true
				}
			],
			"time": "3",
			"totalRequestTime": "3",
			"iterationResults": {}
		},
		{
			"name": "GET /slip/{slipid}",
			"id": "2cd5560b-3c91-4ad1-95c3-cb6b52cf334d",
			"url": "localhost:8080/slip/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Slip in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"93"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Slip in JSON body": true
				}
			],
			"time": "93",
			"totalRequestTime": "93",
			"iterationResults": {}
		},
		{
			"name": "PATCH /slip/{slipid}",
			"id": "0d37c9e3-ab2d-4f8e-bec5-43778a321239",
			"url": "localhost:8080/slip/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"tests": {
				"name": "Response is 202",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Boat ID in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"123"
			],
			"allTests": [
				{
					"Response is 202": true,
					"Should return JSON body": true,
					"Should return Boat ID in JSON body": true
				}
			],
			"time": "123",
			"totalRequestTime": "123",
			"iterationResults": {}
		},
		{
			"name": "PATCH /slip/{slipid} - Verifying Change",
			"id": "9b29c4b3-d0dc-4abc-9295-9c78fc8fdd2b",
			"url": "localhost:8080/slip/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Slip in JSON body": true,
				"Should have updated values": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should have updated values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"97"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Slip in JSON body": true,
					"Should have updated values": true
				}
			],
			"time": "97",
			"totalRequestTime": "97",
			"iterationResults": {}
		},
		{
			"name": "PUT /boat/{boatid}/arrive",
			"id": "d5f41b11-dde6-45c6-92af-b345f2145ef5",
			"url": "localhost:8080/boat/5764017373052928/arrive",
			"totalTime": 0,
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"tests": {
				"name": "Response is 202",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Boat ID in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"455"
			],
			"allTests": [
				{
					"Response is 202": true,
					"Should return JSON body": true,
					"Should return Boat ID in JSON body": true
				}
			],
			"time": "455",
			"totalRequestTime": "455",
			"iterationResults": {}
		},
		{
			"name": "GET /slip/{slipid} - Verify Slip has Boat",
			"id": "8c9c277f-666b-469e-9e2b-6ae27b3ed789",
			"url": "localhost:8080/slip/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Slip in JSON body": true,
				"Should have current_boat as test boat": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should have current_boat as test boat": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"94"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Slip in JSON body": true,
					"Should have current_boat as test boat": true
				}
			],
			"time": "94",
			"totalRequestTime": "94",
			"iterationResults": {}
		},
		{
			"name": "PUT /boat/{boatid}/depart",
			"id": "5567baf1-dcaa-41ed-a6f6-316bb806bb56",
			"url": "localhost:8080/boat/5764017373052928/depart",
			"totalTime": 0,
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"tests": {
				"name": "Response is 202",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Boat ID in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"556"
			],
			"allTests": [
				{
					"Response is 202": true,
					"Should return JSON body": true,
					"Should return Boat ID in JSON body": true
				}
			],
			"time": "556",
			"totalRequestTime": "556",
			"iterationResults": {}
		},
		{
			"name": "GET /slip/{slipid} - Verify Slip has Removed",
			"id": "32d5e9e4-ea8c-477b-9ada-b44227884e84",
			"url": "localhost:8080/slip/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Slip in JSON body": true,
				"Response is 200": true,
				"Should not have current_boat as test boat": true,
				"Should have test boat in departure history": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should not have current_boat as test boat": {
					"pass": 1,
					"fail": 0
				},
				"Should have test boat in departure history": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"101"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Slip in JSON body": true,
					"Should not have current_boat as test boat": true,
					"Should have test boat in departure history": true
				}
			],
			"time": "101",
			"totalRequestTime": "101",
			"iterationResults": {}
		},
		{
			"name": "PUT /boat/{boatid}/arrive/{slipid}",
			"id": "9a3cc6e1-e944-4e89-98e5-ecd01f0cb6f4",
			"url": "localhost:8080/boat/5764017373052928/arrive/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"tests": {
				"name": "Response is 202",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Boat ID in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"7653"
			],
			"allTests": [
				{
					"Response is 202": true,
					"Should return JSON body": true,
					"Should return Boat ID in JSON body": true
				}
			],
			"time": "7653",
			"totalRequestTime": "7653",
			"iterationResults": {}
		},
		{
			"name": "GET /slip/{slipid} - Verify Slip has Boat",
			"id": "e9a81c60-70dd-4a08-a205-62712dafc67c",
			"url": "localhost:8080/slip/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Slip in JSON body": true,
				"Should have current_boat as test boat": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should have current_boat as test boat": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"90"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Slip in JSON body": true,
					"Should have current_boat as test boat": true
				}
			],
			"time": "90",
			"totalRequestTime": "90",
			"iterationResults": {}
		},
		{
			"name": "PUT /boat/{boatid}/depart",
			"id": "23c8cbcc-3716-44fe-b0d5-2fb6b767d1a6",
			"url": "localhost:8080/boat/5764017373052928/depart",
			"totalTime": 0,
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"tests": {
				"name": "Response is 202",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Boat ID in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"453"
			],
			"allTests": [
				{
					"Response is 202": true,
					"Should return JSON body": true,
					"Should return Boat ID in JSON body": true
				}
			],
			"time": "453",
			"totalRequestTime": "453",
			"iterationResults": {}
		},
		{
			"name": "GET /slip/{slipid} - Verify Slip has Removed",
			"id": "0af9ca76-fa7d-4cbd-9ce2-578a18bfa0c1",
			"url": "localhost:8080/slip/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Response is 200",
				"status": "pass",
				"Should return JSON body": true,
				"Should return Slip in JSON body": true,
				"Response is 200": true,
				"Should not have current_boat as test boat": true,
				"Should have test boat in departure history": true
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should not have current_boat as test boat": {
					"pass": 1,
					"fail": 0
				},
				"Should have test boat in departure history": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"112"
			],
			"allTests": [
				{
					"Response is 200": true,
					"Should return JSON body": true,
					"Should return Slip in JSON body": true,
					"Should not have current_boat as test boat": true,
					"Should have test boat in departure history": true
				}
			],
			"time": "112",
			"totalRequestTime": "112",
			"iterationResults": {}
		},
		{
			"name": "DELETE /boat/{boatid}",
			"id": "c37494c2-6ce7-4ba2-802c-a6a5830743dc",
			"url": "localhost:8080/boat/5764017373052928",
			"totalTime": 0,
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"tests": {
				"name": "Response is 202",
				"status": "pass",
				"Should return JSON body": true,
				"Should return message in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return message in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"603"
			],
			"allTests": [
				{
					"Response is 202": true,
					"Should return JSON body": true,
					"Should return message in JSON body": true
				}
			],
			"time": "603",
			"totalRequestTime": "603",
			"iterationResults": {}
		},
		{
			"name": "DELETE /slip/{slipid}",
			"id": "4e0a7646-1ff2-41bb-b9c2-6d39c167a031",
			"url": "localhost:8080/slip/5739238230327296",
			"totalTime": 0,
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"tests": {
				"name": "Response is 202",
				"status": "pass",
				"Should return JSON body": true,
				"Should return message in JSON body": true
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return message in JSON body": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"105"
			],
			"allTests": [
				{
					"Response is 202": true,
					"Should return JSON body": true,
					"Should return message in JSON body": true
				}
			],
			"time": "105",
			"totalRequestTime": "105",
			"iterationResults": {}
		}
	],
	"totalPass": 80,
	"totalFail": 0,
	"totalTime": 12193,
	"lifecycle": "done",
	"requests": [
		{
			"name": "GET /boat",
			"id": "ec7f0d2b-66e1-4756-8c73-1dc28f178bff",
			"url": "localhost:8080/boat",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Array in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "POST /boat - Success",
			"id": "bf5ed0d8-0452-46fb-aee9-6d1babf21a59",
			"url": "localhost:8080/boat",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Response is 201": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return id of created boat": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "POST /boat - Error",
			"id": "45293e90-fe40-46e5-8d0c-722fa0a81069",
			"url": "localhost:8080/boat",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Response is 400": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return error in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET /boat/{boatid}",
			"id": "19cd51db-6c9b-4191-913e-ea454cc52984",
			"url": "localhost:8080/boat/5764017373052928",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PATCH /boat/{boatid}",
			"id": "e8e7010e-b0ae-45e6-a6ca-4c6b7f57ffa8",
			"url": "localhost:8080/boat/5764017373052928",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PATCH /boat/{boatid} - Verifying Change",
			"id": "6f12fd11-baa9-485d-89f0-c3d06a93d9f7",
			"url": "localhost:8080/boat/5764017373052928",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should have updated values": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET /slip",
			"id": "e04880d4-cce1-4b00-801c-07976bdad117",
			"url": "localhost:8080/slip",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Array in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "POST /slip - Success",
			"id": "f26a58c2-e99d-422e-900f-87e7bf62b148",
			"url": "localhost:8080/slip",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Response is 201": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return id of created boat": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "POST /slip - Error",
			"id": "0c70d557-9776-4a6d-9970-f3ea8b7b4560",
			"url": "localhost:8080/slip",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Response is 400": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return error in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET /slip/{slipid}",
			"id": "2cd5560b-3c91-4ad1-95c3-cb6b52cf334d",
			"url": "localhost:8080/slip/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PATCH /slip/{slipid}",
			"id": "0d37c9e3-ab2d-4f8e-bec5-43778a321239",
			"url": "localhost:8080/slip/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PATCH /slip/{slipid} - Verifying Change",
			"id": "9b29c4b3-d0dc-4abc-9295-9c78fc8fdd2b",
			"url": "localhost:8080/slip/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should have updated values": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PUT /boat/{boatid}/arrive",
			"id": "d5f41b11-dde6-45c6-92af-b345f2145ef5",
			"url": "localhost:8080/boat/5764017373052928/arrive",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET /slip/{slipid} - Verify Slip has Boat",
			"id": "8c9c277f-666b-469e-9e2b-6ae27b3ed789",
			"url": "localhost:8080/slip/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should have current_boat as test boat": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PUT /boat/{boatid}/depart",
			"id": "5567baf1-dcaa-41ed-a6f6-316bb806bb56",
			"url": "localhost:8080/boat/5764017373052928/depart",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET /slip/{slipid} - Verify Slip has Removed",
			"id": "32d5e9e4-ea8c-477b-9ada-b44227884e84",
			"url": "localhost:8080/slip/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should not have current_boat as test boat": {
					"pass": 1,
					"fail": 0
				},
				"Should have test boat in departure history": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PUT /boat/{boatid}/arrive/{slipid}",
			"id": "9a3cc6e1-e944-4e89-98e5-ecd01f0cb6f4",
			"url": "localhost:8080/boat/5764017373052928/arrive/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET /slip/{slipid} - Verify Slip has Boat",
			"id": "e9a81c60-70dd-4a08-a205-62712dafc67c",
			"url": "localhost:8080/slip/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should have current_boat as test boat": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "PUT /boat/{boatid}/depart",
			"id": "23c8cbcc-3716-44fe-b0d5-2fb6b767d1a6",
			"url": "localhost:8080/boat/5764017373052928/depart",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Boat ID in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "GET /slip/{slipid} - Verify Slip has Removed",
			"id": "0af9ca76-fa7d-4cbd-9ce2-578a18bfa0c1",
			"url": "localhost:8080/slip/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Response is 200": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return Slip in JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should not have current_boat as test boat": {
					"pass": 1,
					"fail": 0
				},
				"Should have test boat in departure history": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "DELETE /boat/{boatid}",
			"id": "c37494c2-6ce7-4ba2-802c-a6a5830743dc",
			"url": "localhost:8080/boat/5764017373052928",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return message in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "DELETE /slip/{slipid}",
			"id": "4e0a7646-1ff2-41bb-b9c2-6d39c167a031",
			"url": "localhost:8080/slip/5739238230327296",
			"time": "2018-04-28T22:11:06.979Z",
			"responseCode": {
				"code": 202,
				"name": "Accepted",
				"detail": {
					"name": "Accepted",
					"detail": "The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place."
				}
			},
			"testPassFailCounts": {
				"Response is 202": {
					"pass": 1,
					"fail": 0
				},
				"Should return JSON body": {
					"pass": 1,
					"fail": 0
				},
				"Should return message in JSON body": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}